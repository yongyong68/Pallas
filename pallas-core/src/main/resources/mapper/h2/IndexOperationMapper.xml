<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vip.pallas.mybatis.repository.IndexOperationRepository">
  <resultMap id="BaseResultMap" type="com.vip.pallas.mybatis.entity.IndexOperation">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="index_id" jdbcType="BIGINT" property="indexId" />
    <result column="event_type" jdbcType="VARCHAR" property="eventType" />
    <result column="event_name" jdbcType="VARCHAR" property="eventName" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="operation_time" jdbcType="TIMESTAMP" property="operationTime" />
    <result column="version_id" jdbcType="BIGINT" property="versionId" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.vip.pallas.mybatis.entity.IndexOperation">
    <result column="event_detail" jdbcType="LONGVARCHAR" property="eventDetail" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, event_type, event_name, operator, operation_time, version_id, end_time
  </sql>
  <sql id="Blob_Column_List">
    event_detail
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.vip.pallas.mybatis.entity.IndexOperationExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from index_operation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="com.vip.pallas.mybatis.entity.IndexOperationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from index_operation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from index_operation
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from index_operation
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.vip.pallas.mybatis.entity.IndexOperationExample">
    delete from index_operation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.vip.pallas.mybatis.entity.IndexOperation">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID() as id
    </selectKey>
    insert into index_operation (index_id, event_type, event_name, 
      operator, operation_time, version_id, 
      end_time, event_detail)
    values (#{indexId,jdbcType=BIGINT}, #{eventType,jdbcType=VARCHAR}, #{eventName,jdbcType=VARCHAR}, 
      #{operator,jdbcType=VARCHAR}, #{operationTime,jdbcType=TIMESTAMP}, #{versionId,jdbcType=BIGINT}, 
      #{endTime,jdbcType=TIMESTAMP}, #{eventDetail,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.vip.pallas.mybatis.entity.IndexOperation">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID() as id
    </selectKey>
    insert into index_operation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="indexId != null">
        index_id,
      </if>
      <if test="eventType != null">
        event_type,
      </if>
      <if test="eventName != null">
        event_name,
      </if>
      <if test="operator != null">
        operator,
      </if>
      <if test="operationTime != null">
        operation_time,
      </if>
      <if test="versionId != null">
        version_id,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="eventDetail != null">
        event_detail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="indexId != null">
        #{indexId,jdbcType=BIGINT},
      </if>
      <if test="eventType != null">
        #{eventType,jdbcType=VARCHAR},
      </if>
      <if test="eventName != null">
        #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operationTime != null">
        #{operationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="versionId != null">
        #{versionId,jdbcType=BIGINT},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="eventDetail != null">
        #{eventDetail,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.vip.pallas.mybatis.entity.IndexOperationExample" resultType="java.lang.Long">
    select count(*) from index_operation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update index_operation
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.indexId != null">
        version_id = #{record.indexId,jdbcType=BIGINT},
      </if>
      <if test="record.eventType != null">
        event_type = #{record.eventType,jdbcType=VARCHAR},
      </if>
      <if test="record.eventName != null">
        event_name = #{record.eventName,jdbcType=VARCHAR},
      </if>
      <if test="record.operator != null">
        operator = #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="record.operationTime != null">
        operation_time = #{record.operationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.versionId != null">
        version_id = #{record.versionId,jdbcType=BIGINT},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.eventDetail != null">
        event_detail = #{record.eventDetail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update index_operation
    set id = #{record.id,jdbcType=BIGINT},
      index_id = #{record.indexId,jdbcType=BIGINT},
      event_type = #{record.eventType,jdbcType=VARCHAR},
      event_name = #{record.eventName,jdbcType=VARCHAR},
      operator = #{record.operator,jdbcType=VARCHAR},
      operation_time = #{record.operationTime,jdbcType=TIMESTAMP},
      version_id = #{record.versionId,jdbcType=BIGINT},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      event_detail = #{record.eventDetail,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update index_operation
    set id = #{record.id,jdbcType=BIGINT},
      index_id = #{record.indexId,jdbcType=BIGINT},
      event_type = #{record.eventType,jdbcType=VARCHAR},
      event_name = #{record.eventName,jdbcType=VARCHAR},
      operator = #{record.operator,jdbcType=VARCHAR},
      operation_time = #{record.operationTime,jdbcType=TIMESTAMP},
      version_id = #{record.versionId,jdbcType=BIGINT},
      end_time = #{record.endTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.vip.pallas.mybatis.entity.IndexOperation">
    update index_operation
    <set>
      <if test="indexId != null">
        index_id = #{indexId,jdbcType=BIGINT},
      </if>
      <if test="eventType != null">
        event_type = #{eventType,jdbcType=VARCHAR},
      </if>
      <if test="eventName != null">
        event_name = #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operationTime != null">
        operation_time = #{operationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="versionId != null">
        version_id = #{versionId,jdbcType=BIGINT},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="eventDetail != null">
        event_detail = #{eventDetail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.vip.pallas.mybatis.entity.IndexOperation">
    update index_operation
    set index_id = #{record.indexId,jdbcType=BIGINT},
      event_type = #{eventType,jdbcType=VARCHAR},
      event_name = #{eventName,jdbcType=VARCHAR},
      operator = #{operator,jdbcType=VARCHAR},
      operation_time = #{operationTime,jdbcType=TIMESTAMP},
      version_id = #{versionId,jdbcType=BIGINT},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      event_detail = #{eventDetail,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vip.pallas.mybatis.entity.IndexOperation">
    update index_operation
    set index_id = #{record.indexId,jdbcType=BIGINT},
      event_type = #{eventType,jdbcType=VARCHAR},
      event_name = #{eventName,jdbcType=VARCHAR},
      operator = #{operator,jdbcType=VARCHAR},
      operation_time = #{operationTime,jdbcType=TIMESTAMP},
      version_id = #{versionId,jdbcType=BIGINT},
      end_time = #{endTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <delete id="deleteByCondition" parameterType="com.vip.pallas.bean.IndexOperationParams">
    delete
    from index_operation
    where index_id = #{params.indexId,jdbcType=BIGINT} and TIMESTAMPDIFF(day,operation_time,now()) > #{params.timeRange}
    <if test="params.eventType != null and params.eventType !='全部事件'">
      and event_type = #{params.eventType,jdbcType=VARCHAR}
    </if>
    <if test="params.eventName != null and params.eventName !='全部操作'">
      and event_name = #{params.eventName,jdbcType=VARCHAR}
    </if>
    <if test="params.versionId != null">
      and version_id = #{params.versionId,jdbcType=BIGINT}
    </if>
  </delete>
</mapper>